{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ODFE testing cluster set-up",
  
  
    "Parameters": {

        "userdata":{
            "Type": "String",
            "Description": "Script to install ODFE and Kibana"
        },
        "distribution":{
            "Type": "String",
            "Description": "Testing distribution name (RPM/DEB/TAR)",
            "Default" : "RPM",
            "AllowedValues" : ["RPM", "DEB", "TAR"]
        },
        "security":{
            "Type": "String",
            "Default" : "ENABLE",
            "AllowedValues" : [ "ENABLE", "DISABLE" ],
            "Description": "Security feature enabled"
        },
        "vpcId":{
            "Type": "String",
            "Description": "VPC id associated with the cluster"
        },

        "ODFESecurityGroup":{
            "Type" : "String",
            "Description": "Security Group id to be attached to all the resources"
        },
        "keypair":{
            "Type" : "String",
            "Description": "Security Group id to be attached to all the resources"
        }
  
    },

    "Mappings" : {
        "DistributionMap" : {
          "RPM" : { "amiId" : "ami-0e34e7b9ca0ace12d" },
          "TAR" : { "amiId" : "ami-003634241a8fcdec0" },
          "DEB" : { "amiId" : "ami-003634241a8fcdec0" }
        }
      },

    "Conditions" : {
        "CreateSecurityResources" : {"Fn::Equals" : [{"Ref" : "security"}, "ENABLE"]},
        "CreateDisableSecurityResources" : {"Fn::Equals" : [{"Ref" : "security"}, "DISABLE"]}
    },
  
    "Resources": {         
  
        "ODFEASG" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones" : [ "us-west-2a","us-west-2b","us-west-2c","us-west-2d"  ],
                "LaunchConfigurationName" : { "Ref" : "asgLaunchConfig" },
                "MinSize" : "1",
                "MaxSize" : "1",
                "DesiredCapacity" : "1",
                "TargetGroupARNs": [{"Fn::If": ["CreateSecurityResources", {"Ref" : "ESSTargetGroup"}, {"Ref":"ESTargetGroup"}]}, 
                        {"Ref":"KibanaTargetGroup"}],
                "Tags":[{
                    "Key" : "Name", 
                    "Value" : {
                        "Fn::Join": [
                          "", [
                            "ODFE-",
                            {
                              "Ref": "distribution"
                            },
                            "-SECURITY-",
                            {
                                "Ref": "security"
                            },
                            "-Testing-Cluster"
                          ]
                        ]
                      }, 
                    "PropagateAtLaunch" : "true"}]
                }
            },

        "asgLaunchConfig":{
              "Type": "AWS::AutoScaling::LaunchConfiguration",
              "Properties": {
                  "ImageId": { "Fn::FindInMap" : [ "DistributionMap", { "Ref" : "distribution" }, "amiId"]},
                  "InstanceType": "m5a.large",
                  "IamInstanceProfile": "odfe_testing_cluster_role",
                  "KeyName": {"Ref" : "keypair"},
                  "AssociatePublicIpAddress": true,
                  "SecurityGroups": [{"Ref" : "ODFESecurityGroup"}],
                  "UserData": {
                      "Ref": "userdata"}
                  
                }
        },


        "ESLoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Condition" : "CreateDisableSecurityResources",
            "Properties" : {
                "Name" : { "Fn::Join": [
                    "", [
                      "ODFE-ES-",
                      {
                        "Ref": "distribution"
                      },
                      "-SECURITY-",
                      {
                          "Ref": "security"
                      }]
                  ]},
                "Scheme" : "internet-facing",
                "SecurityGroups" : [{"Ref" : "ODFESecurityGroup"}] ,
                "Subnets": ["subnet-48b6f163","subnet-9cb844e4","subnet-d9d21d84","subnet-eeffe1a5"],
                "Type" : "application"
                }
        },

        "ESListener" : {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "Condition" : "CreateDisableSecurityResources",
            "Properties" : {
                "DefaultActions" : [{
                "Type" : "forward",
                "TargetGroupArn" : { "Ref" : "ESTargetGroup" }
                }],
                "LoadBalancerArn" : { "Ref" : "ESLoadBalancer" },
                "Port" : "80",
                "Protocol" : "HTTP"
                }
      },

        "ESTargetGroup" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Condition" : "CreateDisableSecurityResources",
            "Properties" : {
                "HealthCheckEnabled" : "True",
                "Port" : 9200,
                "HealthCheckPath" : "/",
                "Protocol" : "HTTP",
                "VpcId" : {"Ref" : "vpcId"}
                }
      },
        "KibanaLoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties" : {
                "Name" : { "Fn::Join": [
                    "", [
                      "ODFE-KIBANA-",
                      {
                        "Ref": "distribution"
                      },
                      "-SECURITY-",
                      {
                          "Ref": "security"
                      }]
                  ]},
                "Scheme" : "internet-facing",
                "SecurityGroups" : [{"Ref" : "ODFESecurityGroup"}],
                "Subnets": ["subnet-48b6f163","subnet-9cb844e4","subnet-d9d21d84","subnet-eeffe1a5"],
                "Type" : "application"
                }
        },

        "KibanaListener" : {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "Properties" : {
                "DefaultActions" : [{
                "Type" : "forward",
                "TargetGroupArn" : { "Ref" : "KibanaTargetGroup" }
                }],
                "LoadBalancerArn" : { "Ref" : "KibanaLoadBalancer" },
                "Port" : "80",
                "Protocol" : "HTTP"
                }
    },

        "KibanaTargetGroup" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties" : {
                "HealthCheckEnabled" : "True",
                "Port" : 5601,
                "HealthCheckPath" : "/api/status",
                "Protocol" : "HTTP",
                "VpcId" : {"Ref" : "vpcId"}
                }
    },

        "ESSLoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Condition" : "CreateSecurityResources",
            "Properties" : {
                "Name" : { "Fn::Join": [
                    "", [
                      "ODFE-ES-",
                      {
                        "Ref": "distribution"
                      },
                      "-SECURITY-",
                      {
                          "Ref": "security"
                      }]
                  ]},
                "Scheme" : "internet-facing",
                "Subnets": ["subnet-48b6f163","subnet-9cb844e4","subnet-d9d21d84","subnet-eeffe1a5"],
                "Type" : "network"
            }
        },
        "ESSListener" : {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "Condition" : "CreateSecurityResources",
            "Properties" : {
                "DefaultActions" : [{
                "Type" : "forward",
                "TargetGroupArn" : { "Ref" : "ESSTargetGroup" }
                }],
                "LoadBalancerArn" : { "Ref" : "ESSLoadBalancer" },
                "Port" : "443",
                "Protocol" : "TCP"
                }
        },
        "ESSTargetGroup" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Condition" : "CreateSecurityResources",
            "Properties" : {
                "Port" : 9200,
                "Protocol" : "TCP",
                "VpcId" : {"Ref" : "vpcId"}
            }
        }
    }

}