// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
// Description:
// Build file for linux distribution (rpm and deb)

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "base"
     id "nebula.ospackage" version "5.3.0"
}

ext {
    // Remember to increment both of these when rolling out a new version
    es_version = System.getProperty("es.version", "7.8.0")
    opendistroVersion = "1.9.0"
    baseODPluginsVersion = "1.9.0"
    nextODPluginsVersion = "1.9.1"

    isSnapshot = "true" == System.getProperty("build.snapshot", "true")

    println("get dependencies names and corresponding versions")

    new ByteArrayOutputStream().withStream { os1 ->
      def result1 = exec {
        executable = '../../bin/plugins-info'
        args = ['rpm']
        standardOutput = os1
      }
      ext.plugin_names = os1.toString()
    }

    new ByteArrayOutputStream().withStream { os2 ->
      def result2 = exec {
        executable = '../../bin/plugins-info'
        args = ['rpm', '--curr_version']
        standardOutput = os2
      }
      ext.plugin_versions = os2.toString()
    }

    new ByteArrayOutputStream().withStream { os3 ->
      def result2 = exec {
        executable = '../../bin/plugins-info'
        args = ['rpm', '--next_version']
        standardOutput = os3
      }
      ext.plugin_versions_next = os3.toString()
    }

    pname_arr = ext.plugin_names.split("\n").toList()
    pver_arr = ext.plugin_versions.split("\n").toList()
    pver_next_arr = ext.plugin_versions_next.split("\n").toList()

    // there are not direct dependencies to ODFE ES
    // plugin owners handle these in their own build scripts
    indirect_deps = ['opendistro-knnlib']

}
group 'com.amazon.opendistroforelasticsearch'
version = opendistroVersion + (isSnapshot ? "-SNAPSHOT" : "")

ospackage {
    packageName = "opendistroforelasticsearch"
    release = isSnapshot ? "0.1" : '1'
    version = "${project.version}" - "-SNAPSHOT"
    
    println("setup these dependencies: \n##################")
    println("elasticsearch-oss" + "\n = " + es_version)
    requires('elasticsearch-oss', es_version, EQUAL)

    for (int i = 0; i < pname_arr.size; i++){
      String pluginName = pname_arr[i].substring(pname_arr[i].lastIndexOf("/") + 1)
      String pluginVersion = pver_arr[i]
      String pluginVersionNext = pver_next_arr[i]


      for (int j = 0; j < indirect_deps.size; j++)
        if (!pluginName.contains(indirect_deps[j])){
          println(pluginName + "\n>= " + pluginVersion + " | < " + pluginVersionNext)
          requires(pluginName, pluginVersion, GREATER | EQUAL)
          requires(pluginName, pluginVersionNext, LESS)
        }
    } 

    packager = 'Amazon'
    vendor = 'Amazon'
    os = 'LINUX'
    prefix '/usr'

    license 'ASL-2.0'
    maintainer 'OpenDistro for Elasticsearch Team <opendistro@amazon.com>'
    url 'https://opendistro.github.io/for-elasticsearch/downloads.html'
    summary '''
         OpenDistro for Elasticsearch. 
         Reference documentation can be found at https://opendistro.github.io/for-elasticsearch-docs/.
    '''.stripIndent().replace('\n', ' ').trim()
}

buildRpm() {
    arch = 'NOARCH'
    archiveName "${packageName}-${version}.rpm"
}

buildDeb() {
    arch = 'amd64'
    archiveName "${packageName}-${version}.deb"
}

task buildPackages(type: GradleBuild) {
    tasks = ['buildRpm', 'buildDeb']
}
