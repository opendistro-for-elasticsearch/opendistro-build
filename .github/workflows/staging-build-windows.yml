name: Build Windows Exe using tar artifacts

on:
  #schedule:
  #  - cron: '30 10 * * *'
  repository_dispatch:
    types: [staging-build-windows]

jobs:
  build-es-artifacts:
    name: Build Windows ES Artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Build Windows
      run: ./elasticsearch/windows/opendistro-windows-build.sh
        
  build-kibana-artifacts:
    name: Build Kibana Artifacts
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Build Kibana
      run: ./kibana/windows/opendistro-windows-kibana-build.sh

  Test-ISM-NoSec:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-ISM-NoSec
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_ism::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/index-management)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/index-management
           ref: ${{env.p_tag_ism}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: 14
       
      - name: RUN ES and ISM IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es-nosec
          $ErrorActionPreference = 'SilentlyContinue'
          echo running tests
          cd ..\index-management
          dir
          ./gradlew.bat integTest -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest --stacktrace          

  Test-ALERTING-NoSec:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-ALERTING-NoSec
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_alerting::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/alerting)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/alerting
           ref: ${{env.p_tag_alerting}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14
        
      - name: RUN ES and Alerting IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es-nosec
          $ErrorActionPreference = 'SilentlyContinue'
          echo running tests
          cd ..\alerting
          dir
          ./gradlew.bat integTest -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest --stacktrace

  Test-SQL-NoSec:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-SQL-NoSec
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_sql::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/sql)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/sql
           ref: ${{env.p_tag_sql}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14
        
      - name: RUN ES and SQL IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es-nosec
          $ErrorActionPreference = 'SilentlyContinue'
          echo "running tests"
          cd ..\sql
          dir
          .\gradlew.bat integTest -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest --stacktrace
        
  Test-AD-NoSec:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-AD-NoSec
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/anomaly-detection
           ref: ${{env.p_tag_ad}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14
        
      - name: RUN ES and AD IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es-nosec
          $ErrorActionPreference = 'SilentlyContinue'
          echo running tests
          cd ..\anomaly-detection
          dir
          .\gradlew.bat :integTestRunner --tests "com.amazon.opendistroforelasticsearch.ad.rest.*IT" --tests "com.amazon.opendistroforelasticsearch.ad.e2e.*IT" -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest --stacktrace

  Test-SQL:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-SQL
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_sql::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/sql)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/sql
           ref: ${{env.p_tag_sql}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14
        
      - name: RUN ES and SQL IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es
          $ErrorActionPreference = 'SilentlyContinue'
          echo "running tests"
          cd ..\sql
          dir
          .\gradlew.bat integTest -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest -D https=true -D user=admin -D password=admin --stacktrace

  Test-AD:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    name: Test-AD
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run: echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection)
        shell: bash
      - uses: actions/checkout@v1
        with:
           repository: opendistro-for-elasticsearch/anomaly-detection
           ref: ${{env.p_tag_ad}}  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: RUN ES and AD IntegTest
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --es
          $ErrorActionPreference = 'SilentlyContinue'
          echo "running tests"
          cd ..\anomaly-detection
          dir
          .\gradlew.bat :integTestRunner --tests "com.amazon.opendistroforelasticsearch.ad.rest.*IT" --tests "com.amazon.opendistroforelasticsearch.ad.e2e.*IT" -D tests.rest.cluster=localhost:9200 -D tests.cluster=localhost:9200 -D tests.clustername=es-integrationtest -D https=true -D user=admin -D password=admin --stacktrace

  Test-AD-KIBANA-NoSec:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Retrieve plugin tags and odfe versions
        run: |
          echo ::set-env name=od_version::$(python ./bin/version-info --od)
          echo ::set-env name=es_version::$(python ./bin/version-info --es)
          echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection-kibana-plugin)
        shell: bash

      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{env.es_version}}
          token: ${{ secrets.READ_TOKEN }}
          path: kibana

      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo ::set-env name=kibana_node_version::$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")
          echo ::set-env name=kibana_yarn_version::$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")
        shell: bash

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'

      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
      - name: Checking out ad kibana repo
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/anomaly-detection-kibana-plugin
          ref: ${{env.p_tag_ad}}
          path: kibana/plugins/anomaly-detection-kibana-plugin

      - name: Bootstrap the AD kibana plugin
        run: |
          df -h
          cd ./kibana/plugins/anomaly-detection-kibana-plugin
          yarn kbn bootstrap
      - name: run IT for AD kibana plugin
        run: |
          .github\scripts\setup_runners_service_windows.ps1 --kibana-nosec
          dir
          npx cypress verify
          cd ./kibana/plugins/anomaly-detection-kibana-plugin
          yarn cy:run —config baseurl=http://localhost:5601
