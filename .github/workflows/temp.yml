name: Test alering kibana on all platforms

on:
  push:
    branches:
      - "alerting-kib"

jobs:

  Get-versions:
    name: Get-versions
    runs-on: ubuntu-18.04
    outputs:
      es_version: ${{ env.es_version }}
      od_version: ${{ env.od_version }}
      p_tag_alerting_kibana: ${{env.p_tag_alerting_kibana}}
    steps:
      - uses: actions/checkout@v1
      - name: Get all versions and tags
        run: |
          release-tools/scripts/required_packages.sh
          echo "es_version=$(release-tools/scripts/version-info.sh --es)" >> $GITHUB_ENV
          echo "od_version=$(release-tools/scripts/version-info.sh --od)" >> $GITHUB_ENV
          echo "p_tag_alerting_kibana=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/alerting-kibana-plugin)" >> $GITHUB_ENV

  Test-Alerting-Kibana-Sec:
    needs: [Get-versions]
    runs-on: windows-latest
    name: Test-Alerting-Kibana-Sec
    strategy:
      fail-fast: false
      matrix:
        java: [14]
    steps:
      - uses: actions/checkout@v1

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{needs.Get-versions.outputs.es_version}}
          token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
          path: kibana

      - name: Checkout Alerting kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/alerting-kibana-plugin
          # ref: ${{needs.Get-versions.outputs.p_tag_alerting_kibana}}
          ref: main
          path: kibana/plugins/alerting-kibana-plugin
      
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      
      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo "kibana_node_version=$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV
          echo "kibana_yarn_version=$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV   
        shell: bash 
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
      - name: Bootstrap the plugin
        run: |
          cd ./kibana/plugins/alerting-kibana-plugin
          yarn kbn bootstrap
          
      - name: Run ES and kibana and IT (RUN IN ONE STEP OR WINDOWS BREAKS)
        run: |
          release-tools\scripts\setup_runners_service_windows.ps1 --kibana ${{needs.Get-versions.outputs.od_version}}
          dir
          cd ./kibana/plugins/alerting-kibana-plugin
          yarn run cypress run --env security_enabled=true

