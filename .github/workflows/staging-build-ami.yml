name: Build ODFE AMI

on:
  repository_dispatch:
    types: [staging-build-ami]
    
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r elasticsearch/AMI/requirements.txt
    - name: Required Packages
      run: ./release-tools/scripts/required_packages.sh
    - name: Build ODFE AMI
      env:
        AWS_DEFAULT_REGION: "us-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.ODFE_AMI_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.ODFE_AMI_AWS_SECRET_ACCESS_KEY }}
      run: |
        #!/bin/bash
        export APT_OSS_version=`./release-tools/scripts/version-info.sh --es`
        OD_version=`./release-tools/scripts/version-info.sh --od`
        export region_name="us-east-1"
        export os="amazonLinux"
        export security_group_id="sg-038f838bd82ee0ea2"
    
        
        # please check this during the new release, are we getting the latest ami id
        for arch_type in x86_64 arm64;
        do
          latest_base_image_id=`aws ec2 describe-images --owners amazon\
          --filters "Name=architecture,Values=$arch_type"  "Name=name,Values=amzn2-ami-hvm-*-$arch_type-gp2"\
          --query 'sort_by(Images, &CreationDate)[-1].[ImageId]' --output 'text'`
        export base_image_id=$latest_base_image_id 
        echo "base image for $arch_type : $latest_base_image_id"
        export RPM_package_version=$OD_version
        export AMI_name="Open Distro for Elasticsearch-$OD_version-$arch_type-`date +"%D-%H.%M.%S"`"
        python elasticsearch/AMI/main.py
        done
