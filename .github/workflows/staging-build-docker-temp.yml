name: Build ES Docker

on: 
  #schedule:
  #  - cron: '30 10 * * *'
  repository_dispatch:
    types: [staging-build-docker]
  push:
    branches: [opendistro-infra-issues-232-1]

jobs:
  Test-AD-Kibana:
#    needs: [build-es-docker, build-kibana-docker]
    runs-on: [ubuntu-18.04]
    name: Test-AD-Kibana
    strategy:
      matrix:
        java: [14]
    steps:
      - uses: actions/checkout@v1
      
      - name: Retrieve plugin tags 
        run: |
          echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection-kibana-plugin)
          echo ::set-env name=es_version::$(./bin/version-info --es)
          
      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{env.es_version}}
          token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
          path: kibana
           
      - uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/anomaly-detection-kibana-plugin
          ref: master
          path: kibana/plugins/anomaly-detection-kibana-plugin
      
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      
      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo ::set-env name=kibana_node_version::$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")
          echo ::set-env name=kibana_yarn_version::$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")   
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
#      - name: Bootstrap the plugin
#        run: |
#          cd ./kibana/plugins/anomaly-detection-kibana-plugin
#          yarn kbn bootstrap
          
      - name: Start ES and Kibana
        run: .github/scripts/setup_runners_service.sh docker --kibana
          
      - name: run IT
        uses: cypress-io/github-action@v1
        with:
          working-directory: kibana/plugins/anomaly-detection-kibana-plugin
          command: yarn cy:run-with-security --config baseurl=http://localhost:5601
