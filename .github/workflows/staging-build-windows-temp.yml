name: Build Windows Exe using tar artifacts

on:
  #schedule:
  #  - cron: '30 10 * * *'
  repository_dispatch:
    types: [staging-build-windows]
  push:
    branches: [opendistro-infra-issues-232-1]

jobs:
  Test-AD-KIBANA:
    runs-on: windows-latest
    name: Test-AD-KIBANA
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set Up JDK 
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Retrieve plugin tags and odfe versions
        run: |
          echo ::set-env name=od_version::$(python ./bin/version-info --od)
          echo ::set-env name=es_version::$(python ./bin/version-info --es)
          echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection-kibana-plugin)
        shell: bash

      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{env.es_version}}
          token: ${{ secrets.READ_TOKEN }}
          path: kibana

      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo ::set-env name=kibana_node_version::$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")
          echo ::set-env name=kibana_yarn_version::$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")
        shell: bash

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'

      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
      - name: Checking out ad kibana repo
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/anomaly-detection-kibana-plugin
          ref: master
          path: kibana/plugins/anomaly-detection-kibana-plugin

      - name: Bootstrap the AD kibana plugin
        run: |
          df -h
          cd ./kibana/plugins/anomaly-detection-kibana-plugin
          yarn kbn bootstrap
      - name: Start ES and Kibana
        run: .github\scripts\setup_runners_service_windows.ps1 --kibana

      - name: run IT for AD kibana plugin
        run: |
          dir
          npx cypress verify
          cd ./kibana/plugins/anomaly-detection-kibana-plugin
          yarn cy:run-with-security --config baseurl=http://localhost:5601
