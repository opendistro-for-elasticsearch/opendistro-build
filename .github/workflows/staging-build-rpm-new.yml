name: Process RPM Artifacts

on:
  # schedule:
  #   - cron: '0 10 * * *'
#  repository_dispatch:
#    types: [staging-build-rpm]
  push:
    branches: [sreekarj_rpm_new]

jobs:
  plugin-availability:
    name: Check Plugin Availability
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Run check_plugin scripts
        run: release-tools/scripts/check_plugin.sh "elasticsearch_rpm,kibana_zip"; exit `cat /tmp/plugin_status.check`

  build-es-artifacts:
    needs: [plugin-availability]
    name: Build ES Artifacts
    runs-on: ubuntu-18.04
    container:
      image: opendistroforelasticsearch/multijava08101112-git:v1

    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: |
          apt-get update
          apt-get install sudo -y
          ./release-tools/scripts/required_packages.sh
      - name: Build rpm
        run: |
          #!/bin/bash -x
          set -e
          set -u
          export JAVA_HOME=/openjdk12
          export PATH=$JAVA_HOME:$PATH
          OD_VERSION=`./release-tools/scripts/version-info.sh --od`
          S3_RELEASE_BASEURL=`yq eval '.urls.ODFE.releases' release-tools/scripts/manifest.yml`
          cd elasticsearch/linux_distributions
          apt update -y
          apt install jq python -y
          ./gradlew buildRpm --console=plain -Dbuild.snapshot=false -b ./build.gradle
          rpm_artifact=`ls build/distributions/*.rpm`
          ls -ltr build/distributions/*.rpm
          aws s3 cp $rpm_artifact $S3_RELEASE_BASEURL$OD_VERSION/odfe
          #aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/downloads/*"

          echo "RPM creation for ES completed"

  build-kibana-artifacts:
    needs: [plugin-availability]
    name: Build Kibana Artifacts
    runs-on: [ubuntu-18.04]
    container:
      image: opendistroforelasticsearch/jsenv:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: |
          apt-get update
          apt-get install sudo -y
          ./release-tools/scripts/required_packages.sh
      - name: Build Kibana rpm
        run: apt install -y jq; ./kibana/linux_distributions/opendistro-kibana-build.sh rpm

#  signing-artifacts:
#    name: Sign Yum
#    runs-on: [ubuntu-16.04]
#    container: 
#      image: amazonlinux
#    needs: [build-es-artifacts, build-kibana-artifacts]
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#      - name: Sign And Upload Artifacts
#        env:
#          passphrase: ${{ secrets.RPM_SIGN_PASSPHRASE }}
#        run: |
#          yum update -y
#          yum install -y unzip
#          sleep 5
#          curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
#          unzip awscli-bundle.zip
#          ./awscli-bundle/install -b ~/bin/aws
#          sleep 5
#          chmod 755 elasticsearch/linux_distributions/scripts/rpm-addsign.exp
#          sh elasticsearch/linux_distributions/rpm-signing.sh $passphrase
#
#  Build-ES-and-Kibana-Centos-Docker:
#    needs: [signing-artifacts]
#    runs-on: [ubuntu-18.04]
#    name: Build Centos image for Sanity Testing
#    steps:
#      - uses: actions/checkout@v1
#      - name: Checkout Opendistro-Infra
#        uses: actions/checkout@v1
#        with:
#          repository: opendistro-for-elasticsearch/opendistro-infra
#          ref: jenkins-test
#          token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
#      - name: Build Centos Docker Image
#        env:
#          DOCKER_USER: ${{ secrets.DOCKER_USER }}
#          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
#        run: |
#          ES_VER=`./bin/version-info --es`
#          ODFE_VER=`./bin/version-info --od`
#          cd elasticsearch/linux_distributions
#          cd ../../..
#          cd opendistro-infra/scripts/dockerfiles/tests/elasticsearch
#          docker build --build-arg VER=$ODFE_VER -t opendistroforelasticsearch/elasticsearch-test-centos:$ODFE_VER -f opendistro.elasticsearch.test.centos.Dockerfile .
#          
#          cd ../kibana
#          docker build -t opendistroforelasticsearch/kibana-test-centos:$ODFE_VER -f opendistro.kibana.test.centos.Dockerfile .
#          
#          echo "******************************"
#          echo "Login to Docker"
#          echo "******************************"
#          docker login --username $DOCKER_USER --password $DOCKER_PASS
#          
#          docker push opendistroforelasticsearch/elasticsearch-test-centos:$ODFE_VER
#          docker tag opendistroforelasticsearch/elasticsearch-test-centos:$ODFE_VER opendistroforelasticsearch/elasticsearch-test-centos:latest
#          docker push opendistroforelasticsearch/elasticsearch-test-centos:latest
#          sleep 5
#          docker push opendistroforelasticsearch/kibana-test-centos:$ODFE_VER
#          docker tag opendistroforelasticsearch/kibana-test-centos:$ODFE_VER opendistroforelasticsearch/kibana-test-centos:latest
#          docker push opendistroforelasticsearch/kibana-test-centos:latest
#
#          docker logout
#
#      - name: Create Email Message
#        run: |
#          echo "<h2>Docker Images for Centos Are Ready</h2>" >> Message.md
#          echo "<h3> ES Image for Centos Testing: opendistroforelasticsearch/elasticsearch-test-centos:Version-Tag </h3>" >> Message.md
#          echo "<h3> Kibana Image for Centos Testing: opendistroforelasticsearch/kibana-test-centos:Version-Tag </h3>" >> Message.md
#
#      - name: Send Mail
#        uses: dawidd6/action-send-mail@master
#        with:
#          server_address: smtp.gmail.com
#          server_port: 465
#          username: ${{secrets.MAIL_USERNAME}}
#          password: ${{secrets.MAIL_PASSWORD}}
#          subject: Opendistro for Elasticsearch Build - Centos Images For Testing
#          # Read file contents as body:
#          body: file://Message.md
#          to: odfe-distribution-build@amazon.com
#          from: Opendistro Elasticsearch
#          # Optional content type:
#          content_type: text/html
#
#  Provision-Runners:
#    needs: [signing-artifacts]
#    name: Provision-Runners
#   runs-on: ubuntu-18.04
#    steps:
#      - uses: actions/checkout@v1
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
#          aws-region: us-west-2
#      - name: AWS Cli Processing
#        run: |
#          #!/bin/bash
#          # Please add comma at the end of the RUNNERS strings
#          # Don't add space after commas
#          RUNNERS="odfe-rpm-ism-nosec,odfe-rpm-alerting-nosec,odfe-rpm-sql-nosec,odfe-rpm-knn-nosec,odfe-rpm-ad-nosec,"
#          RUNNERS+="odfe-rpm-sql,odfe-rpm-ad,odfe-rpm-alerting,"
#          RUNNERS+="odfe-rpm-ad-kibana-nosec,odfe-rpm-sql-kibana-nosec,"
#          RUNNERS+="odfe-rpm-ad-kibana,odfe-rpm-sec-kibana"
#          release-tools/scripts/setup_runners.sh run $RUNNERS ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }} ami-086e8a98280780e63
#
#  Test-ISM-NoSec:
#    needs: [Provision-Runners]
#    name: Test-ISM-NoSec
#    runs-on: [self-hosted, Linux, X64, odfe-rpm-ism-nosec]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: 14
#      - name: Required Packages
#        run: release-tools/scripts/required_packages.sh
#      - name: Retrieve plugin tags
#        run: echo "p_tag_ism=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/index-management)" >> $GITHUB_ENV
#      - uses: actions/checkout@v1
#        with:
#          repository: opendistro-for-elasticsearch/index-management
#          ref: ${{env.p_tag_ism}}
#      - name: IT for ISM NoSec
#        run: |
#          release-tools/scripts/setup_runners_service.sh rpm --es-nosec
#          export PATH=$JAVA_HOME:$PATH; cd $GITHUB_WORKSPACE/../index-management; pwd
#          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest

