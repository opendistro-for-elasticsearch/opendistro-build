name: Test TAR Artifacts X64

on:
  schedule:
    - cron: '0 11 * * *'
  repository_dispatch:
    types: [staging-test-tar-x64]
  push:
    branches: [test-tar]

jobs:
  Test-SEC-KIBANA:
    runs-on: [ubuntu-18.04]
    name: Test-SEC-KIBANA
    strategy:
      fail-fast: false
      matrix:
        java: [14]
    steps:
      - uses: actions/checkout@v1
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Retrieve plugin tags 
        run: |
          echo "p_tag_sec_kibana=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/security-kibana-plugin)" >> $GITHUB_ENV
          echo "es_version=$(release-tools/scripts/version-info.sh --es)" >> $GITHUB_ENV

#      - name: Checkout Kibana
#        uses: actions/checkout@v2
#        with:
#          repository: opendistro-for-elasticsearch/kibana-oss
#          ref: ${{env.es_version}}
#          token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
#          path: kibana  
#
#      - uses: actions/checkout@v2
#        with:
#          repository: opendistro-for-elasticsearch/security-kibana-plugin
#          ref: ${{env.p_tag_sec_kibana}}
#          path: kibana/plugins/opendistro_security
#      
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      
#      - name: Get node and yarn versions
#        id: node_yarn_versions
#        run: |
#          echo "kibana_node_version=$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV
#          echo "kibana_yarn_version=$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV   
#      
#      - name: Setup node
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{env.kibana_node_version}}
#          registry-url: 'https://registry.npmjs.org'
#      
#      - name: Install correct yarn version for Kibana
#        run: |
#          npm uninstall -g yarn
#          echo "Installing yarn ${{ env.kibana_yarn_version }}"
#          npm i -g yarn@${{ env.kibana_yarn_version }}
#      
#      - name: Bootstrap the plugin
#        run: |
#          cd ./kibana/plugins/opendistro_security
#          yarn kbn bootstrap --oss
          
      - name: Start ES and Kibana
        run: release-tools/scripts/setup_runners_service.sh zip --kibana
 
      - name: Run IT
        run: |
          cd ./kibana/plugins/opendistro_security
          yarn test:jest_server
