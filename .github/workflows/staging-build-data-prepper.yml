name: Process DATAPREPPER Artifacts

on:
#  schedule:
#    - cron: '0 10 * * *'
  repository_dispatch:
    types: [staging-build-data-prepper]

jobs:
  sync-dataprepper-artifacts:
    name: sync-dataprepper-artifacts
    runs-on: [ubuntu-18.04]
    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: required utilites
      run: release-tools/scripts/required_packages.sh

    - name: S3 sync artifacts
      run: |
        S3_URL_DATAPREPPER="s3://artifacts.dataprepper.amazon.com/"
        S3_URL_DATAPREPPER_STAGING=`release-tools/scripts/plugin_parser.sh opendistroforelasticsearch-data-prepper plugin_location_staging | sed 's/[][}{"]*//g' | awk -F ':' '{print $2 ":" $3}'`
        TAG_VERSION=`release-tools/scripts/plugin_parser.sh opendistroforelasticsearch-data-prepper plugin_version`

        echo $TAG_VERSION
        aws s3 sync $S3_URL_DATAPREPPER $S3_URL_DATAPREPPER_STAGING --exclude "*" --include "opendistroforelasticsearch-data-prepper-jdk-${TAG_VERSION}*" --quiet
        aws s3 sync $S3_URL_DATAPREPPER $S3_URL_DATAPREPPER_STAGING --exclude "*" --include "opendistroforelasticsearch-data-prepper-${TAG_VERSION}*" --quiet
        aws s3 ls $S3_URL_DATAPREPPER_STAGING | grep $TAG_VERSION

  sync-dataprepper-docker-images:
    name: sync-dataprepper-docker-images
    runs-on: [ubuntu-18.04]
    strategy:
      fail-fast: false
      matrix:
        java: [14]
    steps:
    - uses: actions/checkout@v1

    - name: required utilites
      run: release-tools/scripts/required_packages.sh

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Build and Sync docker images to hub
      env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        #!/bin/bash
        TAG_VERSION=`release-tools/scripts/plugin_parser.sh opendistroforelasticsearch-data-prepper plugin_version`
        DOCKER_REG="opendistroforelasticsearch/data-prepper"
        echo $TAG_VERSION
        git clone --depth 1 --branch v$TAG_VERSION https://github.com/opendistro-for-elasticsearch/Data-Prepper.git
        cd Data-Prepper
        ./gradlew -Prelease :release:docker:docker
        docker images
        IMAGE_ID=`docker images | grep data-prepper | awk -F ' ' '{print $3}'`
        echo $IMAGE_ID
        docker login --username $DOCKER_USER --password $DOCKER_PASS
        docker tag $IMAGE_ID $DOCKER_REG:$TAG_VERSION
        docker tag $IMAGE_ID $DOCKER_REG:latest
        docker images
        docker push $DOCKER_REG:$TAG_VERSION
        docker push $DOCKER_REG:latest
        docker logout


