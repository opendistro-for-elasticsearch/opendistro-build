name: Process DATAPREPPER Artifacts

on:
#  schedule:
#    - cron: '0 10 * * *'
  repository_dispatch:
    types: [staging-build-data-prepper]

jobs:
  sync-dataprepper-artifacts:
    name: sync-dataprepper-artifacts
    runs-on: [ubuntu-18.04]
    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: S3 sync artifacts
      run: |
        #!/bin/bash
        S3_BUCKET_PROD="artifacts.opendistroforelasticsearch.amazon.com"
        S3_BUCKET_DATAPREPPER="artifacts.dataprepper.amazon.com"
        TARGET_DIR=`./bin/plugins-info data-prepper zip --require-install-false`
        TAG_VERSION="v$(./bin/plugins-info data-prepper cutversion --require-install-false | tr ' ' '\n' | uniq | sort -V | head -n 1)"

        echo $TAG_VERSION
        aws s3 sync s3://$S3_BUCKET_DATAPREPPER/ s3://$S3_BUCKET_PROD/$TARGET_DIR/ --exclude "*" --include "data-prepper-jdk-${TAG_VERSION}*" --quiet
        aws s3 sync s3://$S3_BUCKET_DATAPREPPER/ s3://$S3_BUCKET_PROD/$TARGET_DIR/ --exclude "*" --include "data-prepper-${TAG_VERSION}*" --quiet
        aws s3 ls s3://$S3_BUCKET_PROD/$TARGET_DIR/ | grep $TAG_VERSION
        aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/$TARGET_DIR/*"

  sync-dataprepper-docker-images:
    name: sync-dataprepper-docker-images
    runs-on: [ubuntu-18.04]
    strategy:
      fail-fast: false
      matrix:
        java: [14]
    steps:
    - uses: actions/checkout@v1

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Build and Sync docker images to hub
      env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        #!/bin/bash
        TAG_VERSION="v$(./bin/plugins-info data-prepper cutversion --require-install-false | tr ' ' '\n' | uniq | sort -V | head -n 1)"
        DOCKER_REG="opendistroforelasticsearch/data-prepper"
        echo $TAG_VERSION
        git clone --depth 1 --branch $TAG_VERSION https://github.com/opendistro-for-elasticsearch/Data-Prepper.git
        cd Data-Prepper
        ./gradlew -Prelease :release:docker:docker
        IMAGE_ID=`docker images | grep data-prepper/data-prepper | awk -F ' ' '{print $3}'`
        docker login --username $DOCKER_USER --password $DOCKER_PASS
        docker tag $IMAGE_ID $DOCKER_REG:$TAG_VERSION
        docker tag $IMAGE_ID $DOCKER_REG:latest
        docker images
        docker push $DOCKER_REG:$TAG_VERSION
        docker push $DOCKER_REG:latest
        docker logout


