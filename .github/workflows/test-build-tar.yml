name: Process TAR Artifacts

on:
  # schedule:
  #   - cron: '0 10 * * *'
  repository_dispatch:
    types: [test-build-tar]

jobs:
  plugin-availability:
    name: Check Plugin Availability
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run check_plugin scripts
        run: .github/scripts/check_plugin.sh "zip,kibana"; exit `cat /tmp/plugin_status.check`

  build-es-artifacts:
    needs: [plugin-availability]
    name: Build ES Artifacts
    runs-on: ubuntu-latest
    container:
      image: opendistroforelasticsearch/multijava08101112-git:v1
    steps:
    - uses: actions/checkout@v1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Build tar
      run: apt install -y jq; set -u; export JAVA_HOME=/openjdk12; export PATH=$JAVA_HOME:$PATH; ./elasticsearch/linux_distributions/opendistro-tar-build.sh


  build-kibana-artifacts:
    needs: [plugin-availability]
    name: Build Kibana Artifacts
    runs-on: [ubuntu-latest]
    container:
        image: opendistroforelasticsearch/jsenv:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build Kibana
        run: apt install -y jq; ./kibana/linux_distributions/opendistro-kibana-build.sh tar

  Test-ISM-Plugin:
    needs: [build-es-artifacts]
    name: Run ISM Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [14]
    steps:
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run:  echo ::set-env name=p_tag_ism::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/index-management)
      - name: Checkout ISM
        uses: actions/checkout@v1
        with:
          repository: opendistro-for-elasticsearch/index-management
          ref: ${{env.p_tag_ism}}
      - name: Run Tests
        run: |
          odfe_version=`./bin/version-info --od`
          echo $odfe_version
          cd ..
          cd opendistro-build/elasticsearch/linux_distributions
          cd ../../..
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/opendistroforelasticsearch-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-$odfe_version.tar.gz
          cd opendistroforelasticsearch-$odfe_version
          sed -i /install_demo_configuration/d opendistro-tar-install.sh
          ./bin/elasticsearch-plugin remove opendistro_security
          
          nohup ./opendistro-tar-install.sh &
          sleep 45
          cd ../index-management
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
          

  Test-Alerting-Plugin:
    needs: [build-es-artifacts]
    name: Run Alerting Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [14]
    steps:
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run:  echo ::set-env name=p_tag_alerting::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/alerting)
      - name: Checkout Alerting
        uses: actions/checkout@v1
        with:
          repository: opendistro-for-elasticsearch/alerting
          ref: ${{env.p_tag_alerting}}
      - name: Run Tests
        run: |
          odfe_version=`./bin/version-info --od`
          echo $odfe_version
          cd ..
          cd opendistro-build/elasticsearch/linux_distributions
          cd ../../..
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/opendistroforelasticsearch-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-$odfe_version.tar.gz
          cd opendistroforelasticsearch-$odfe_version
          sed -i /install_demo_configuration/d opendistro-tar-install.sh
          sed -i '/http\.port/s/^# *//' config/elasticsearch.yml
          ./bin/elasticsearch-plugin remove opendistro_security
          
          nohup ./opendistro-tar-install.sh &          
          sleep 45
          cd ../alerting/alerting
          ../gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest

  Test-SQL-Plugin:
    needs: [build-es-artifacts]
    name: Run SQL Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [14]
    steps:
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run:  echo ::set-env name=p_tag_sql::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/sql)
      - name: Checkout SQL
        uses: actions/checkout@v1
        with:
          repository: opendistro-for-elasticsearch/sql
          ref: ${{env.p_tag_sql}}
      - name: Run Tests
        run: |
          odfe_version=`./bin/version-info --od`
          echo $odfe_version
          cd ..
          cd opendistro-build/elasticsearch/linux_distributions
          cd ../../..
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/opendistroforelasticsearch-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-$odfe_version.tar.gz
          cd opendistroforelasticsearch-$odfe_version
          sed -i /install_demo_configuration/d opendistro-tar-install.sh
          ./bin/elasticsearch-plugin remove opendistro_security
          
          nohup ./opendistro-tar-install.sh &
          sleep 45
          cd ../sql
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest

  Test-KNN-Plugin:
    needs: [build-es-artifacts]
    name: Run k-NN Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [14]
    steps:
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/checkout@v1
      - name: Retrieve plugin tags
        run:  echo ::set-env name=p_tag_knn::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/k-NN)
      - name: Checkout k-NN
        uses: actions/checkout@v1
        with:
          repository: opendistro-for-elasticsearch/k-NN
          ref: ${{env.p_tag_knn}}
      - name: Run Tests
        run: |
          odfe_version=`./bin/version-info --od`
          echo $odfe_version
          cd ..
          cd opendistro-build/elasticsearch/linux_distributions
          cd ../../..
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/opendistroforelasticsearch-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-$odfe_version.tar.gz
          cd opendistroforelasticsearch-$odfe_version
          sed -i /install_demo_configuration/d opendistro-tar-install.sh
          ./bin/elasticsearch-plugin remove opendistro_security
          
          nohup ./opendistro-tar-install.sh &
          sleep 45
          cd ../k-NN
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
