name: Process Debian Artifacts

on:
  # schedule:
  #   - cron: '0 10 * * *'
  repository_dispatch:
    types: [staging-build-deb]

jobs:
  plugin-availability:
    name: Check Plugin Availability
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Run check_plugin scripts
        run: release-tools/scripts/check_plugin.sh; exit `cat /tmp/plugin_status.check`

  Provision-Runners:
    needs: [plugin-availability]
    name: Provision-Runners
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: AWS Cli Processing
        run: |
          #!/bin/bash
          # Please add comma at the end of the RUNNERS strings
          # Don't add space after commas
          RUNNERS="odfe-deb-build-kibana-arm64"
          release-tools/scripts/setup_runners.sh run $RUNNERS ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }} ami-055197d43e4ec7482

  build-es-artifacts:
    needs: [plugin-availability]
    name: Build ES Artifacts
    runs-on: ubuntu-18.04
    container:
      image: opendistroforelasticsearch/multijava08101112-git:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Build deb
        run: |
          #!/bin/bash -x
          set -e
          set -u
          export JAVA_HOME=/openjdk12
          export PATH=$JAVA_HOME:$PATH
          OD_VERSION=`./release-tools/scripts/version-info.sh --od`
          S3_RELEASE_BASEURL=`yq eval '.urls.ODFE.releases' release-tools/scripts/manifest.yml`
          cd elasticsearch/linux_distributions
          #apt update -y
          #apt install jq python -y
          echo build x64
          ./gradlew buildDeb --console=plain -Dbuild.snapshot=false -b ./build-x64.gradle
          echo build arm64
          ./gradlew buildDeb --console=plain -Dbuild.snapshot=false -b ./build-arm64.gradle
          ls -ltr build/distributions/*.deb
          deb_artifact_x64=`ls build/distributions/*x64.deb`
          deb_artifact_arm64=`ls build/distributions/*arm64.deb`
          aws s3 cp $deb_artifact_x64 $S3_RELEASE_BASEURL$OD_VERSION/odfe/
          aws s3 cp $deb_artifact_arm64 $S3_RELEASE_BASEURL$OD_VERSION/odfe/
          echo "DEB creation for ES completed"

  build-kibana-artifacts-x64:
    needs: [plugin-availability]
    name: Build Kibana Artifacts X64
    runs-on: [ubuntu-18.04]
    container:
      image: opendistroforelasticsearch/jsenv:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Build Kibana deb
        run: ./kibana/linux_distributions/opendistro-kibana-build.sh deb linux x64

  build-kibana-artifacts-arm64:
    needs: [plugin-availability, Provision-Runners]
    name: Build Kibana Artifacts ARM64
    runs-on: [self-hosted, Linux, ARM64, odfe-deb-build-kibana-arm64]
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Required Packages
        run: |
          ./release-tools/scripts/required_packages.sh
          sudo apt-get install -y ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm -v 1.10.2
          fpm --version
      - name: Build Kibana deb
        run: ./kibana/linux_distributions/opendistro-kibana-build.sh deb linux arm64

  sign-deb-artifacts:
    needs: [build-es-artifacts, build-kibana-artifacts-x64, build-kibana-artifacts-arm64]
    runs-on: [ubuntu-18.04]
    container:
      image: opendistroforelasticsearch/base-ubuntu
    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh

      - name: (NEW) Sign Deb Artifacts
        env:
          passphrase: ${{ secrets.PASSPHRASE }}
        run: ./elasticsearch/linux_distributions/deb-signing.sh $passphrase

  CleanUp-Runners:
    needs: [sign-deb-artifacts]
    if: always()
    name: CleanUp-Runners
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: AWS Cli Processing
        run: |
          #!/bin/bash
          # Please add comma at the end of the RUNNERS strings
          # Don't add space after commas
          RUNNERS="odfe-deb-build-kibana-arm64"
          release-tools/scripts/setup_runners.sh terminate $RUNNERS ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}

