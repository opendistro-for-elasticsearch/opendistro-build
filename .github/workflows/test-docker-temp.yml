name: Build ES Docker

on: 
  #schedule:
  #  - cron: '30 10 * * *'
  push:
    branches:
      - weicongs-amazon-docker-security-it
jobs:
        
  test-es-plugins-without-security:
    strategy:
      matrix:
        java: [14]
    name: Build ES Docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Retrieve plugin tags
      run: |
        echo ::set-env name=p_tag_ism::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/index-management)
        echo ::set-env name=p_tag_alerting::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/alerting)
        echo ::set-env name=p_tag_sql::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/sql)
        echo ::set-env name=p_tag_knn::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/k-NN)
        echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection)
        
    - name: Checkout ISM
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/index-management
        ref: ${{env.p_tag_ism}}

    - name: Checkout Alerting
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/alerting
        ref: ${{env.p_tag_alerting}}

    - name: Checkout SQL
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/sql
        ref: ${{env.p_tag_sql}}
        
    - name: Checkout k-NN
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/k-NN
        ref: ${{env.p_tag_knn}}
  
    - name: Checkout AD
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/anomaly-detection
        ref: ${{env.p_tag_ad}}
       
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set Up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Start ES Container without Security
      run: |
        ODFE_VER=`./bin/version-info --od`
        echo "ODFE VERSION $ODFE_VER"
        DOCKER_NAME=odfe-test-$ODFE_VER
        echo "Running newly tagged image with no security"
        echo "FROM opendistroforelasticsearch/opendistroforelasticsearch:$ODFE_VER" >> Dockerfile
        echo "RUN /usr/share/elasticsearch/bin/elasticsearch-plugin remove opendistro_security" >> Dockerfile
        echo "RUN echo path.repo: [\"/usr/share/elasticsearch\"] >> /usr/share/elasticsearch/config/elasticsearch.yml" >> Dockerfile
        docker build -t odfe-http:no-security .
        sleep 5
 
        docker run -p 9200:9200 -d -p 9600:9600 -e "discovery.type=single-node" --name $DOCKER_NAME odfe-http:no-security
        sleep 30
        curl -XGET http://localhost:9200/_cat/plugins > plugins.out

    - name: Test ISM Plugin
      if: always()
      run: | 
        cd ..
        if cat plugins.out|grep opendistro_index_management
        then
          cd index-management
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
        else
          echo "Skipping Test as Plugin not available"
        fi

    - name: Test Alerting Plugin
      if: always()
      run: |
        cd ..
        if cat plugins.out|grep opendistro_alerting
        then
          cd alerting/alerting
          ../gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
        else
          echo "Skipping Test as Plugin not available"
        fi
        
    - name: Test SQL Plugin
      if: always()
      run: |
        cd ..
        if cat plugins.out|grep opendistro_sql
        then
          cd sql
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
        else
          echo "Skipping Test as Plugin not available"
        fi
        
    - name: Test k-NN Plugin
      if: always()
      run: |
        cd ..
        if cat plugins.out|grep opendistro-knn
        then
          cd k-NN
          ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
        else
          echo "Skipping Test as Plugin not available"
        fi
        
    - name: Test AD Plugin
      if: always()
      run: |
        cd ..
        if cat plugins.out|grep opendistro-anomaly-detection
        then
          cd anomaly-detection
          ./gradlew :integTestRunner --tests "com.amazon.opendistroforelasticsearch.ad.rest.*IT" --tests "com.amazon.opendistroforelasticsearch.ad.e2e.*IT" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=es-integrationtest
        else
          echo "Skipping Test as Plugin not available"
        fi
