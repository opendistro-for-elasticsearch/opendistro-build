name: Process RPM Artifacts

on:
  schedule:
    - cron: '0 10 * * *'
jobs:
  plugin-avilability:
    name: Check Plugin Availability
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Checking Availability
        run: |
          #!/bin/bash
          CURRENT_NO_PLUGINS=6
          PLUGINS="opendistro-sql/opendistro_sql opendistro-alerting/opendistro_alerting opendistro-job-scheduler/opendistro-job-scheduler opendistro-security/opendistro_security performance-analyzer/opendistro_performance_analyzer opendistro-index-management/opendistro_index_management"
          
          cd elasticsearch/bin
          ls -ltr
          OD_VERSION=`./version-info --od`
          echo "$OD_VERSION"
          cd /home/runner/work/opendistro-build
          mkdir plugins
          ls -ltr
          cd plugins
          
          for item in $PLUGINS
          do
            plugin_folder=`echo $item|awk -F/ '{print $1}'`
            plguin_item=`echo $item|awk -F/ '{print $2}'`
            echo $plugin_folder.$plguin_item
            aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/elasticsearch-plugins/$plugin_folder/ . --recursive --exclude "*" --include "$plguin_item-$OD_VERSION*"
          done
          ls -ltr
          tot_plugins=`ls|wc -l`
          echo $tot_plugins
          
          if [ $tot_plugins == $CURRENT_NO_PLUGINS ]
          then
              echo "All plugins available"
          else
              exit 1
          fi
          
  build-es-artifacts:
    needs: [plugin-avilability]
    name: Build ES Artifacts
    runs-on: ubuntu-latest
    container:
      image: opendistroforelasticsearch/multijava08101112-git:v1

    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build rpm
        run: |
          #!/bin/bash -x
          set -e
          set -u
          export JAVA_HOME=/openjdk12
          export PATH=$JAVA_HOME:$PATH
          cd elasticsearch/linux_distributions
          ./gradlew buildRpm --console=plain -Dbuild.snapshot=false -b ./build.gradle
          rpm_artifact=`ls build/distributions/*.rpm`
          ls -ltr build/distributions/*.rpm

          aws s3 cp $rpm_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/rpms/opendistro-elasticsearch/
          aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/downloads/*"

          echo "RPM creation for ES completed"

  build-kibana-artifacts:
    needs: [build-es-artifacts]
    name: Build Kibana Artifacts
    runs-on: [ubuntu-latest]
    container:
      image: opendistroforelasticsearch/jsenv:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build Kibana rpm
        run: |
          #!/bin/bash -x
          cd kibana/linux_distributions
          sh generate-pkg.sh
          rpm_artifact=`ls target/*.rpm`
          echo $rpm_artifact
          aws s3 cp $rpm_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/rpms/opendistroforelasticsearch-kibana/
