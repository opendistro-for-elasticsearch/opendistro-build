name: Webhook Build ES Docker on Dispatch

on: 
  # schedule:
  #   - cron: '30 10 * * *'
  repository_dispatch:
    types: [test-build-docker-temp]
  push:
    branches: [pztest111]

jobs:
  build-es-docker:
    strategy:
      matrix:
        java: [14]
    name: Build ES Docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Getting OD Version
      run: |
        OD_VERSION=`./bin/version-info --od`
        plugin_tag=v$OD_VERSION.0
        echo "::set-env name=tag::$plugin_tag"

    - name: Checkout ISM
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/index-management
        ref: ${{env.tag}}

    - name: Checkout Alerting
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/alerting
        ref: ${{env.tag}}

    - name: Checkout SQL
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/sql
        ref: ${{env.tag}}
        
    - name: Checkout k-NN
      uses: actions/checkout@v1
      with:
        repository: opendistro-for-elasticsearch/k-NN
        ref: ${{env.tag}}

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set Up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Starting ES Docker Build
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo "Executing On-demand Build for ES Docker Image"
        ODFE_VER=`./bin/version-info --od`
        echo "ODFE VERSION $ODFE_VER"
        workdir=`pwd`
        sudo apt-get install python-virtualenv
        ./download_plugins.sh
        cd elasticsearch
        security=`ls docker/build/elasticsearch/plugins/|grep opendistro_security|wc -l`
        
        if [ $security -gt 0 ]
        then
           echo "Security plugin is available"
        else
           echo "Security plugin is NOT available"
        fi
        
        cd docker
        make build
        
        echo "******************************"
        echo "Login to Docker"
        echo "******************************"
        docker login --username $DOCKER_USER --password $DOCKER_PASS
        docker images|grep "amazon/opendistro-for-elasticsearch" > docker_id.out
        image_id=`awk -F ' ' '{print $3}' docker_id.out`
        echo "Docker Id is $image_id"
        docker tag $image_id peterzhuamazon/pztest111:ES-jdk14-$ODFE_VER
        docker images
        docker push peterzhuamazon/pztest111:ES-jdk14-$ODFE_VER
        
#  build-kibana-docker:
#    runs-on: [ubuntu-16.04]
#    name: Build Kibana Docker
#    steps:
#      - uses: actions/checkout@v2
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#
#      - name: Build Kibana Docker
#        env:
#          DOCKER_USER: ${{ secrets.DOCKER_USER }}
#          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
#        run: |
#          sudo apt-get install python-virtualenv
#          ODFE_VER=`./bin/version-info --od`
#          echo "ODFE VERSION $ODFE_VER"
#          ./download_kibana_plugins.sh
#          cd kibana
#          cd docker
#          make build
#          
#          echo "******************************"
#          echo "Uploading Kibana Docker"
#          echo "******************************"
#          docker login --username $DOCKER_USER --password $DOCKER_PASS
#          docker images|grep "amazon/opendistro-for-elasticsearch-kibana" > kibana_id.out
#          kibana_image_id=`awk -F ' ' '{print $3}' kibana_id.out`
#          echo "Docker Id is $kibana_image_id"
#          docker tag $kibana_image_id peterzhuamazon/pztest111:KIBANA-jdk14-$ODFE_VER
#          docker images
#          docker push peterzhuamazon/pztest111:KIBANA-jdk14-$ODFE_VER
